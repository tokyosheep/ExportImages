{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"react\"","webpack:///external \"react-redux\"","webpack:///external \"redux\"","webpack:///external \"fs\"","webpack:///external \"react-dom\"","webpack:///./redux/reducer/index.ts","webpack:///./redux/store/store.ts","webpack:///./redux/actions/mapStateProps.ts","webpack:///./redux/actions/app.ts","webpack:///./redux/actions/mapDispatchProps.ts","webpack:///./components/parts/checkBox.tsx","webpack:///./components/PS/header.tsx","webpack:///./components/parts/textBox.tsx","webpack:///./components/PS/main.tsx","webpack:///./components/parts/button.tsx","webpack:///./fileSystem/init.js","webpack:///./fileSystem/connectHostJsx.ts","webpack:///./components/PS/asideOptions.tsx","webpack:///./fileSystem/getImagesOnAi.ts","webpack:///./connection/vulcanConnect.ts","webpack:///./connection/PScommunicate.ts","webpack:///./fileSystem/getPhotoshopImg.ts","webpack:///./components/PS/JsxButton.tsx","webpack:///./components/PS/switchMode.tsx","webpack:///./components/PS/footer.tsx","webpack:///./components/PS/compactMode/compactMain.tsx","webpack:///./fileSystem/basicSystem.ts","webpack:///./fileSystem/presetSystem.ts","webpack:///./components/PS/presetMode/presetMode.tsx","webpack:///./components/PS/loading.tsx","webpack:///./components/parts/selectBox.tsx","webpack:///./components/PS/Presets.tsx","webpack:///./components/PS/LayoutPS.tsx","webpack:///./connection/AICommunicate.ts","webpack:///./components/parts/radio.tsx","webpack:///./components/AI/AIMain.tsx","webpack:///./components/AI/Header.tsx","webpack:///./components/AI/LayoutAI.tsx","webpack:///./components/Base.tsx","webpack:///./main.tsx"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","initPSOptions","extensions","jpg","psd","tiff","png","gif","eps","options","isResize","size","resolution","quality","allOpened","mergeLay","saveTrans","convertsRGB","moreOptions","asAnotherFile","eachFolder","export","moreOptionsExt","folder","initAIReplaceList","initPlacedList","rootReducer","PSReducer","state","action","type","replace","arg","obj","prop","json","LoadingState","AIReplaceReducer","list","AIPlacedImgs","docs","docIndex","placed","imgIndex","checked","PSModeReduce","mapStateToProps","SetValue","SetLoad","SetList","GetPlaced","SetChecked","mapDispatchProps","dispatch","set_On","set_Off","set_Prop","set_Json","set_Folder","set_Mode","set_List","get_Placed","set_Checked","ExtCheckBox","func","disabled","className","onChange","e","StdCheckBox","borderHead","background","width","height","display","exts","setExt","handleCheckBox","target","boxes","entries","forEach","push","style","StdNumberBox","max","min","StdTextBox","setOptions","handleNumberBox","parseFloat","otherOptions","map","StdButton","onClick","LargeButton","csInterface","CSInterface","appID","getApplicationID","Vulcan","VulcanMessage","VulcanInt","VulcanInterface","extFolder","getExtensionID","getSystemPath","SystemPath","EXTENSION","extensionRoot","resizeWindow","resizeContent","jsx","callJsx","Promise","resolve","reject","evalScript","callHostScript","JSON","stringify","folderPathStyle","border","padding","marginTop","extension","setExtension","folderPath","setFolderPath","optionList","extensionList","catch","path","app","this","sendMsg","sendObj","isAppRun","extensionId","vulcanNamespace","TYPE_PREFIX","msg","setPayload","dispatchMessage","isAppRunning","messageHandle","message","payload","getPayload","parse","PSReceive","addMessageListener","images","validateProp","flag","values","isCHecked","alert","isNaN","setMode","Array","isArray","setState","isImport","extList","err","data","JSONPath","readJSON","ListElements","array","presets","setPrests","JsonList","props","isLoad","isSetLoad","loadDisplay","PrestSelectForm","jsonList","selected","names","selectList","setSelectList","setSeleted","text","setText","JsonData","undefined","applyData","find","Error","da","filter","some","htmlElemnts","window","scrollTo","AIReceive","StdRadio","handleRadioButton","fileList","f","index","setList","image","img","placedItems","length","addEventListener","location","reload","mainContent","setApp","store","document","getElementById"],"mappings":"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","file":"main.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 6);\n","module.exports = require(\"react\");","module.exports = require(\"react-redux\");","module.exports = require(\"redux\");","module.exports = require(\"fs\");","module.exports = require(\"react-dom\");","import {InitPS} from \"./type\";\n\nconst initPSOptions:InitPS = {\n    extensions:{\n        jpg:false,\n        psd:false,\n        tiff:false,\n        png:false,\n        gif:false,\n        eps:false\n    },\n    options:{\n        isResize:false,\n        size:1000,\n        resolution:72,\n        quality:12,\n        allOpened:false,\n        mergeLay:false,\n        saveTrans:false,\n        convertsRGB:false\n    },\n    moreOptions:{\n        asAnotherFile:false,\n        eachFolder:false,\n        export:false,\n    },\n    moreOptionsExt:{\n        jpg:false,\n        psd:false,\n        tiff:false,\n        png:false,\n        gif:false,\n        eps:false\n    },\n    folder:\"\",\n}\n\nexport type ActionPSReducer = {\n    type:string,\n    arg:{\n        obj:string,\n        prop:string,\n        value:boolean\n    }&{json:InitPS}&{folder:string},\n}\n\nexport const PSReducer = (state = initPSOptions,action:ActionPSReducer) =>{\n    switch(action.type){\n        case \"SETPROP\":{\n            const replace = {...state};\n            replace[action.arg.obj][action.arg.prop] = action.arg.value;\n            return replace;\n        }\n\n        case \"SETJSON\":{\n            const JSON = {...action.arg.json};\n            return JSON;\n        }\n\n        case \"SETFOLDER\":{\n            const folder = action.arg.folder;\n            const replace = {...state};\n            replace.folder = folder;\n            return replace;\n        }\n        default:\n            return state;\n    }\n}\n\nexport type MODE = \"normal\" | \"compact\" | \"preset\";\nexport type MODEAction = {type:string,arg:{mode:MODE}};\nconst initMode = \"normal\";\n\nexport const LoadingState = (state = false,action:{type:\"on\"|\"off\"}) =>{\n    switch(action.type){\n        case\"off\":\n            return false;\n        case\"on\":\n            return true;\n        default:\n            return state;\n    }\n}\n\nexport const PSModeReduce = (state = initMode,action:MODEAction) =>{\n    switch(action.type){\n        case \"SETMODE\":\n            switch(action.arg.mode){\n                case \"normal\":\n                    return \"compact\";\n                case \"compact\":\n                    return \"preset\";\n                case \"preset\":\n                    return \"normal\";\n                default:\n                    return action.arg.mode;\n            }\n\n        default:\n            return state;\n    }\n}\n\nexport type ImageList ={\n    name:string,\n    path:string,\n    checked:boolean,\n}[];\nconst initAIReplaceList:ImageList = [];\n\ntype ActionAIReducer = {\n    type:string,\n    arg:{\n        list:ImageList\n    }\n}\n\nexport const AIReplaceReducer = (state = initAIReplaceList,action:ActionAIReducer) =>{\n    switch(action.type){\n        case \"SETLIST\":{\n            return action.arg.list;\n        }\n        default:\n            return state;\n    }\n}\n\nexport type Place = {name:string,path:string,index:number,checked:boolean};\n\nexport type PlacedImages = {\n    name:string,\n    path:string,\n    placed:Place[],\n}[];\n\nconst initPlacedList:PlacedImages = [];\n\nexport type ActionAIPlacedImgs = {\n    type:string,\n    arg:{\n        docIndex:number,\n        imgIndex:number,\n        value:boolean\n    }\n}&{\n    type:string,\n    arg:{\n        list:PlacedImages\n    }\n}\n\nexport const AIPlacedImgs = (state = initPlacedList,action:ActionAIPlacedImgs) =>{\n    console.log(action);\n    switch(action.type){\n        case \"GETPLACED\":{\n            const list = [...action.arg.list];\n            return list;\n        }\n\n        case \"SETCHECKED\":{\n            const docs = [...state];\n            docs[action.arg.docIndex].placed[action.arg.imgIndex].checked = action.arg.value;\n            return docs;\n        }\n\n        default:\n            return state;\n    }\n}\n","import {combineReducers,createStore} from \"redux\";\nimport {PSReducer,LoadingState,AIReplaceReducer,AIPlacedImgs,PSModeReduce} from \"../reducer/index\";\n\nconst rootReducer = combineReducers({\n    PSReducer,\n    LoadingState,\n    AIReplaceReducer,\n    AIPlacedImgs,\n    PSModeReduce,\n});\n\nexport const configStore = () =>{\n    const store = createStore(rootReducer);\n    return store;\n};","export const mapStateToProps = state =>{\n    return {state:state};\n}","\n\nexport const SetValue ={\n    setValue:({obj,prop,value})=>{\n        return {type:\"SETPROP\",arg:{obj,prop,value}};\n    },\n    setJson:({json})=>{\n        return {type:\"SETJSON\",arg:{json}}\n    },\n    setFolder:({folder})=>{\n        return {type:\"SETFOLDER\",arg:{folder}}\n    },\n    setMode:({mode})=>{\n        return {type:\"SETMODE\",arg:{mode}}\n    }\n}\n\nexport const SetLoad ={\n    setOn:()=>{\n        return{type:\"on\"}\n    },\n    setOff:()=>{\n        return{type:\"off\"}\n    }\n}\n\nexport const SetList ={\n    setList:({list})=>{\n        return {type:\"SETLIST\",arg:{list}};\n    }\n}\n\nexport const GetPlaced ={\n    getPlaced:({list})=>{\n        return {type:\"GETPLACED\",arg:{list}};\n    }\n}\n\nexport const SetChecked ={\n    setChecked:({docIndex,imgIndex,value})=>{\n        return {type:\"SETCHECKED\",arg:{docIndex,imgIndex,value}};\n    }\n}","import {SetValue,SetList,GetPlaced,SetChecked,SetLoad} from \"./app\";\n\n\nexport const mapDispatchProps = dispatch =>{\n    return{\n        set_On:()=>dispatch(SetLoad.setOn()),\n        set_Off:()=>dispatch(SetLoad.setOff()),\n        set_Prop:(obj,prop,value)=>dispatch(SetValue.setValue({obj,prop,value})),\n        set_Json:(json)=>dispatch(SetValue.setJson({json})),\n        set_Folder:(folder)=>dispatch(SetValue.setFolder({folder})),\n        set_Mode:(mode)=>dispatch(SetValue.setMode({mode})),\n        set_List:(list)=>dispatch(SetList.setList({list})),\n        get_Placed:(list)=>dispatch(GetPlaced.getPlaced({list})),\n        set_Checked:(docIndex,imgIndex,value)=>dispatch(SetChecked.setChecked({docIndex,imgIndex,value})),\n    }\n}","import * as React from \"react\";\nimport {FormType} from \"./type\";\n\n\nexport const ExtCheckBox = ({name,arg,func,value,disabled=false}:FormType<boolean>) =>(\n    <label className=\"ExtCheckbox\">\n        <input type=\"checkbox\" className=\"ExtCheckbox__input\" checked={value} onChange={(e)=>func(e,arg)} disabled={disabled}/>\n        <div className=\"ExtCheckbox__display\">{name}</div>\n    </label>\n);\n\nexport const StdCheckBox = ({name,arg,func,value,disabled=false}:FormType<boolean>) =>(\n    <label className=\"StdCheckbox\">\n        <input type=\"checkbox\" className=\"StdCheckbox__input\" checked={value} onChange={(e)=>func(e,arg)} disabled={disabled}/>\n        <div className=\"StdCheckbox__display\">{name}</div>\n    </label>\n);\n\nexport const FileCheckBox = ({name,arg,func,value,disabled=false}:FormType<boolean>) =>(\n    <label className=\"FileCheckbox\">\n        <input type=\"checkbox\" className=\"FileCheckbox__input\" checked={value} onChange={(e)=>func(e,arg)} disabled={disabled}/>\n        <div className=\"FileCheckbox__display\">{name}</div>\n    </label>\n);\n","import * as React from \"react\";\nimport {useMemo,useState} from \"react\";\nimport {connect} from \"react-redux\";\nimport {mapStateToProps} from \"../../redux/actions/mapStateProps\";\nimport {mapDispatchProps} from \"../../redux/actions/mapDispatchProps\";\nimport {ExtCheckBox} from \"../parts/checkBox\";\nimport {InitPS,Extension} from \"../../redux/reducer/type\";\n\n\nconst borderHead = {\n    background:\"linear-gradient(45deg,rgb(6, 16, 33),rgb(0, 20, 255),rgb(6, 16, 33))\",\n    width:\"300px\",\n    height:\"3px\",\n    display:\"block\"\n}\n\nconst Header = (prop/*:{state:{PSReducer:InitPS}}*/) =>{\n    console.log(prop);\n    const [exts,setExt]:[Extension,(Extension:Extension)=>void] = useState(prop.state.PSReducer.extensions);\n    useMemo(()=>{\n        setExt(prop.state.PSReducer.extensions);\n    },[prop.state.PSReducer.extensions]);\n\n    const handleCheckBox = (e,arg) =>{\n        prop.set_Prop(\"extensions\",arg.key,e.target.checked);\n    }\n\n    const boxes = [];\n    Object.entries(exts).forEach(([key,prop])=>{\n        boxes.push(<li key={key}><ExtCheckBox name={key} value={prop} arg={{key:key}} func={handleCheckBox}/></li>);\n    });\n    return(\n        <header className=\"PSheader\">\n            <h1 className=\"header-large\">Export images</h1>\n            <div style={borderHead}></div>\n            <ul className=\"PSheader__exts\">\n                {boxes}\n            </ul>\n        </header>\n    )\n}\n\nexport default connect(mapStateToProps,mapDispatchProps)(Header);","import * as React from \"react\";\nimport {FormType} from \"./type\";\ntype Numbers = FormType<number> & {max:number,min:number};\n\n\nexport const StdNumberBox = ({name,max,min,value,func,arg,disabled=false}:Numbers) =>(\n    <label className=\"stdNumber\">\n        <p>{name}</p>\n        <input type=\"number\" className=\"stdNumber__input\" disabled={disabled} max={max} min={min} value={value} onChange={(e)=>func(e,arg)}/>\n    </label>\n);\n\nexport const StdTextBox = ({name,value,func,arg,disabled=false}:FormType<string>) =>(\n    <label className=\"stdText\">\n        <p>{name}</p>\n        <input type=\"text\" className=\"stdText__input\" disabled={disabled} value={value} onChange={(e)=>func(e,arg)}/>\n    </label>\n);","import * as React from \"react\";\nimport {useMemo,useState} from \"react\";\nimport {connect} from \"react-redux\";\nimport {mapStateToProps} from \"../../redux/actions/mapStateProps\";\nimport {mapDispatchProps} from \"../../redux/actions/mapDispatchProps\";\n\nimport {StdNumberBox} from \"../parts/textBox\";\nimport {StdCheckBox} from \"../parts/checkBox\";\nimport {Options} from \"../../redux/reducer/type\";\n\nconst MainOptions = (prop):React.ReactElement =>{\n    const [options,setOptions]:[Options,(options:Options)=>void] = useState(prop.state.PSReducer.options);\n    useMemo(()=>{\n        setOptions(prop.state.PSReducer.options);\n    },[prop.state.PSReducer.options]);\n\n    const handleCheckBox = (e,arg) =>{\n        prop.set_Prop(\"options\",arg.key,e.target.checked);\n    }\n\n    const handleNumberBox = (e,arg)=>{\n        prop.set_Prop(\"options\",arg.key,parseFloat(e.target.value));\n    }\n    const optionList = [{name:\"all opened\",obj:options.allOpened,key:\"allOpened\"},\n    {name:\"convert sRGB(jpg)\",obj:options.convertsRGB,key:\"convertsRGB\"},\n    {name:\"merge layer(tiff)\",obj:options.mergeLay,key:\"mergeLay\"},\n    {name:\"save transfer(tiff)\",obj:options.saveTrans,key:\"saveTrans\"}];\n    const otherOptions = optionList.map(o=>{\n        return <li key={o.name}><StdCheckBox name={o.name} value={o.obj} arg={{key:o.key}} func={handleCheckBox}/></li>\n    });\n    const disabled = !options.isResize;\n    return(\n        <main className=\"PSmain\">\n            <h2 className=\"head-small\">options</h2>\n            <StdCheckBox name=\"Resize\" func={handleCheckBox} value={options.isResize} arg={{key:\"isResize\"}} />\n            <ul className=\"PSmain__resizeForm\">\n                <li>\n                    <StdNumberBox name=\"size\" disabled={disabled} value={options.size} func={handleNumberBox} max={90000} min={1} arg={{key:\"size\"}}/>\n                </li>\n                <li>\n                    <StdNumberBox name=\"resolution\" disabled={disabled} value={options.resolution} func={handleNumberBox} max={1000} min={1} arg={{key:\"resolution\"}}/>\n                </li>\n                <li>\n                    <StdNumberBox name=\"quality(jpg)\" value={options.quality} func={handleNumberBox} max={12} min={1} arg={{key:\"quality\"}}/>\n                </li>\n            </ul>\n            <ul className=\"PSmain__otherOptions\">\n                {otherOptions}\n            </ul>\n        </main>\n    )\n}\n\nexport default connect(mapStateToProps,mapDispatchProps)(MainOptions);","import * as React from \"react\";\nimport {FormType} from \"./type\";\n\nexport const StdButton = ({name,arg,func}:FormType<boolean>) =>(\n    <button className=\"stdButton\" onClick={()=>func(arg)}>{name}</button>\n)\n\nexport const LargeButton = ({name,arg,func}:FormType<boolean>) =>(\n    <button className=\"largeButton\" onClick={()=>func(arg)}>{name}</button>\n)","\nconst csInterface = new CSInterface();\nconst appID = csInterface.getApplicationID();\nconst Vulcan = VulcanMessage;\nconst VulcanInt = VulcanInterface;\nconst extensionId = csInterface.getExtensionID(); \nconst extFolder = csInterface.getSystemPath(SystemPath.EXTENSION);\nconst filePath = csInterface.getSystemPath(SystemPath.EXTENSION) +`/js/`;\nconst extensionRoot = csInterface.getSystemPath(SystemPath.EXTENSION) +`/jsx/`;\n\nconst init = () =>{\n    csInterface.evalScript(`$.evalFile(\"${extensionRoot}json2.js\")`);//json2読み込み\n    csInterface.evalScript(`$.evalFile(\"${extensionRoot}getAllFiles.jsx\")`);\n    csInterface.evalScript(`$.evalFile(\"${extensionRoot}decodeStr.jsx\")`);\n    if(appID==\"PHXS\"){\n        csInterface.evalScript(`$.evalFile(\"${extensionRoot}saveFunc.jsx\")`);\n    }\n}\n\nconst reloadEvent = () =>{\n    const csInterface = new CSInterface();\n    csInterface.addEventListener(\"com.adobe.csxs.events.WindowVisibilityChanged\",()=>{location.reload(true)},false);\n}\n\nconst resizeWindow = (width,height) =>{\n    csInterface.resizeContent(width,height);\n}\n\nexport {csInterface,extensionRoot,filePath,extensionId,extFolder,appID,Vulcan,VulcanInt,init,reloadEvent,resizeWindow};","import {csInterface,extensionRoot} from \"../fileSystem/init\";\n\ninterface HostObj{\n    jsx:string,\n    arg?:object,\n}\n\ntype Return = string|boolean;\n\nexport class SendHostScript implements HostObj{\n    constructor(public jsx:string,public arg?:object){\n\n    }\n\n    callJsx():Promise<string|boolean>{\n        return new Promise((resolve,reject)=>{\n            csInterface.evalScript(`$.evalFile(\"${extensionRoot}${this.jsx}\")`,(o:Return)=>{\n                if(!o||o===\"false\")reject(false);\n                resolve(o);\n            });\n        })\n    }\n\n    callHostScript(obj:object):Promise<string|boolean>{\n        return new Promise((resolve,reject)=>{\n            csInterface.evalScript(`${this.jsx}(${JSON.stringify(obj)})`,(o:Return)=>{\n                if(!o||o === \"false\"){\n                    reject(false);\n                }                \n                resolve(o);\n            });\n        });\n    }\n}","import * as React from \"react\";\nimport {useMemo,useState} from \"react\";\nimport {connect} from \"react-redux\";\nimport {mapStateToProps} from \"../../redux/actions/mapStateProps\";\nimport {mapDispatchProps} from \"../../redux/actions/mapDispatchProps\";\n\nimport {StdButton} from \"../parts/button\";\nimport {StdCheckBox,ExtCheckBox} from \"../parts/checkBox\";\nimport {MoreOptions,Extension} from \"../../redux/reducer/type\";\nimport {setJSXFolder} from \"../../fileSystem/getImagesOnAi\";\n\nconst folderPathStyle = {\n    border:\"solid 1px #eeee00\",\n    display:\"inline-block\",\n    padding:\"10px 5px\",\n    marginTop:\"15px\",\n}\n\nconst borderHead = {\n    background:\"linear-gradient(45deg,rgb(30, 16, 6),rgb(200, 20, 15),rgb(30, 16, 6))\",\n    width:\"200px\",\n    height:\"3px\"\n}\n\nconst AsideOptions = (prop) =>{\n    const [options,setOptions]:[MoreOptions,(MoreOptions:MoreOptions)=>void] = useState(prop.state.PSReducer.moreOptions);\n    useMemo(()=>setOptions(prop.state.PSReducer.moreOptions),[prop.state.PSReducer.moreOptions]);\n    \n    const [extension,setExtension]:[Extension,(Extension)=>void] = useState(prop.state.PSReducer.moreOptionsExt);\n    useMemo(()=>setExtension(prop.state.PSReducer.moreOptionsExt),[prop.state.PSReducer.moreOptionsExt]);\n    const handleCheckBox = (e,arg) => {\n        prop.set_Prop(arg.obj,arg.key,e.target.checked)\n    };\n\n    const [folderPath,setFolderPath]:[string,(f:string)=>void] = useState(prop.state.PSReducer.folder);\n    useMemo(()=> setFolderPath(prop.state.PSReducer.folder),[prop.state.PSReducer.folder]);\n    \n    const optionList = [];\n    Object.entries(options).forEach(([key,value])=>{\n        optionList.push(<li key={key}><StdCheckBox name={key} value={value} func={handleCheckBox} arg={{key:key,obj:\"moreOptions\"}}/></li>);\n    });\n    const extensionList = [];\n    Object.entries(extension).forEach(([key,value])=>{\n        extensionList.push(<li key={key}><ExtCheckBox name={key} value={value} func={handleCheckBox} arg={{key:key,obj:\"moreOptionsExt\"}} disabled={!options.export}/></li>);\n    });\n\n    const selectFolder = async(e) =>{\n        const path = await setJSXFolder();\n        if(typeof path !== \"string\")return false;\n        prop.set_Folder(path);\n    }\n\n    return(\n        <aside className=\"asideOptions\">\n            <div className=\"asideOptions__basic\">\n                <h3 className=\"head-middle\">save options</h3>\n                <div style={borderHead}></div>\n                <ul className=\"asideOptions__basic__List\">\n                    {optionList}\n                </ul>\n            </div>\n            <div className=\"asideOptions__folder\">\n                <StdButton name=\"folder\" func={selectFolder}/>\n            </div>\n            <p style={folderPathStyle}>{folderPath}</p>\n            <div className=\"asideOptions__extensions\">\n                <h3 className=\"head-small\"></h3>\n                <ul className=\"saveOptions__extensions__list\">\n                    {extensionList}\n                </ul>\n            </div>\n        </aside>\n    )\n}\n\nexport default connect(mapStateToProps,mapDispatchProps)(AsideOptions);","import {SendHostScript} from \"./connectHostJsx\";\nimport {ImageList,PlacedImages} from \"../redux/reducer\";\nimport * as fs from \"fs\";\nimport {extensionRoot} from \"./init.js\";\n\nexport const setJSXFolder = async():Promise<string|boolean|void> =>{\n    const send = new SendHostScript(\"folderSelect.jsx\");\n    const path = await send.callJsx().catch(e=>console.log(e));\n    return path;\n}\n\nexport const getPlacedImages = async():Promise<object[]|boolean> =>{\n    const send = new SendHostScript(\"getPlacedOnAI.jsx\");\n    const images = await send.callJsx().catch(e=>console.log(e));\n    if(typeof images !== \"string\")return false;\n    console.log(images);\n    return JSON.parse(images);\n}\n\nexport const shifImages = async(PSImages:ImageList,AIImages:PlacedImages) =>{\n    const newImg = PSImages.find(img => img.checked === true);\n    if(newImg === undefined)return false;\n    const send = new SendHostScript(\"AIFunc\");\n    const AIChecked = AIImages.map(doc=> {//チェックされたイメージのみ抽出\n        doc.placed = doc.placed.filter(place=> place.checked === true)\n        return doc;\n    });\n    console.log(\"newItems\");\n    console.log(newImg);\n    console.log(AIChecked);\n    //fs.writeFileSync(`${extensionRoot}data.json`,JSON.stringify({PSImage:newImg,AIImages:AIChecked,func:\"shiftImages\"}));//デバッグ用\n    const flag = await send.callHostScript({PSImage:newImg,AIImages:AIChecked,func:\"shiftImages\"}).catch(e=> console.log(e));\n    console.log(flag);\n    return flag;\n}\n\nexport const replaceSelected = async(img:string):Promise<void> =>{\n    const send = new SendHostScript(\"AIFunc\");\n    const flag = await send.callHostScript({image:img,func:\"replaceSlected\"});\n}","import {csInterface,Vulcan,VulcanInt} from \"../fileSystem/init\";\ninterface Communication{\n    app:string\n}\nexport class SendPs implements Communication{\n    app:string\n    constructor(app:string){\n        this.app = app;\n    }\n    sendMsg(sendObj:object):void|boolean{\n        if(!this.isAppRun()) return false;//通信先のアプリが立ち上がっていなかったら中断\n        const extensionId = csInterface.getExtensionID(); \n        const vulcanNamespace = Vulcan.TYPE_PREFIX + extensionId;\n        const msg = new Vulcan(vulcanNamespace);\n        msg.setPayload(JSON.stringify({obj:sendObj,app:this.app}));//jsonも渡せる\n        VulcanInt.dispatchMessage(msg);\n    }\n    isAppRun(){\n        if(!VulcanInt.isAppRunning(this.app)){\n            csInterface.evalScript(`alert(\"${this.app} hasn't started yet\")`);\n            return false;\n        }\n        return true;\n    }\n}\n\nexport const messageHandle = (message:object):Promise<{app:string,obj:object}> =>{\n    return new Promise(resolve=>{\n        const payload = VulcanInt.getPayload(message);\n        const object = JSON.parse(payload);\n        resolve(object);\n    })\n}\n\n","import {csInterface,appID,Vulcan,VulcanInt} from \"../fileSystem/init\";\nimport {SendPs,messageHandle} from \"./vulcanConnect\";\nimport {SendHostScript} from \"../fileSystem/connectHostJsx\";\n\nexport const sendFromPS = (app = \"illustrator\") =>{\n    return new SendPs(app);\n}\n\nconst receive = async(message) =>{\n    console.log(message);\n    const msg = await messageHandle(message);\n    console.log(msg);\n    if(msg.app !== \"photoshop\")return;\n    const send = new SendHostScript(\"PSfunc\");\n    const flag = await send.callHostScript({images:msg.obj,func:\"openImages\"}).catch(e=> console.log(e));\n    console.log(flag);\n}\n\nexport const PSReceive = async():Promise<void> =>{\n    const extensionId = csInterface.getExtensionID(); \n    console.log(csInterface);\n    const vulcanNamespace = Vulcan.TYPE_PREFIX + extensionId;//ここで受信したい送信側のExtensionのIDを指定する\n    VulcanInt.addMessageListener(vulcanNamespace,(e)=>receive(e));\n}","import {SendHostScript} from \"./connectHostJsx\";\nimport {InitPS,Extension} from \"../redux/reducer/type\";\n\nconst isCHecked = (exts:Extension):boolean =>{\n    let flag:boolean = false;\n    Object.values(exts).forEach(value=>{\n        if(value)flag = true;\n    });\n    return flag;\n}\n\nconst isEmpty = (folder:unknown):boolean => folder === \"\" || folder === null || folder === undefined;\n\nexport const validateProp = (prop:InitPS):boolean =>{\n    const exts = prop.moreOptions.export ? prop.moreOptionsExt : prop.extensions;\n    if(!isCHecked(exts)){\n        alert(\"you must check any extension\");\n        return false;\n    }\n    if(prop.moreOptions.export && isEmpty(prop.folder)){\n        alert(\"folder path is invalid\");\n        return false;\n    }\n    if(exts.jpg&&(prop.options.quality > 12 || prop.options.quality < 1 || isNaN(prop.options.quality))){\n        alert(\"jpeg quality is invalid\");\n        return false;\n    }\n    return true;\n}\n\nexport const getPhotoshopImages = async():Promise<object|boolean> =>{\n    const send = new SendHostScript(\"getPSImages.jsx\");\n    const images = await send.callJsx().catch(e=>console.log(e));\n    if(typeof images !== \"string\")return false;\n    console.log(images);\n    return JSON.parse(images);\n}","import * as React from \"react\";\nimport {connect} from \"react-redux\";\nimport {mapStateToProps} from \"../../redux/actions/mapStateProps\";\nimport {mapDispatchProps} from \"../../redux/actions/mapDispatchProps\";\nimport {SendHostScript} from \"../../fileSystem/connectHostJsx\";\nimport {extensionRoot} from \"../../fileSystem/init.js\";\nimport {validateProp} from \"../../fileSystem/getPhotoshopImg\";\nimport {LargeButton} from \"../parts/button\";\nimport bs from \"../../fileSystem/basicSystem\";\nconst JsxButton = (prop) =>{\n    const JSXprocess = async() =>{\n        if(!validateProp(prop.state.PSReducer))return;\n        prop.set_On();\n        try{\n            const send = new SendHostScript(\"PSfunc\");\n            //await bs.writeFile(extensionRoot+\"data.json\",prop.state.PSReducer);\n            console.log(prop.state.PSReducer);\n            const flag = await send.callHostScript({prop:prop.state.PSReducer,func:\"saveProcess\"});\n            console.log(flag);\n        }catch(e){\n            alert(e);\n        }finally{\n            prop.set_Off();\n        }\n    }\n    return(\n        <LargeButton name=\"done\" func={JSXprocess}/>\n    )\n}\n\nexport default connect(mapStateToProps,mapDispatchProps)(JsxButton);","import * as React from \"react\";\nimport {useMemo,useState} from \"react\";\nimport {connect} from \"react-redux\";\nimport {mapStateToProps} from \"../../redux/actions/mapStateProps\";\nimport {mapDispatchProps} from \"../../redux/actions/mapDispatchProps\";\n\nimport {LargeButton} from \"../parts/button\";\n\nconst SwitchModeButton = (prop) =>{\n    const [mode,setMode]:[string,(v:string)=>void] = useState(prop.state.PSModeReduce);\n    useMemo(()=>setMode(prop.state.PSModeReduce),[prop.state.PSModeReduce]);\n    const swtchMode = (arg:{mode:string}) =>{\n        prop.set_Mode(arg.mode);\n    }\n    return(\n        <LargeButton name=\"switch mode\" arg={{mode:mode}} func={swtchMode}/>\n    )\n}\n\nexport default connect(mapStateToProps,mapDispatchProps)(SwitchModeButton);","import * as React from \"react\";\nimport {connect} from \"react-redux\";\nimport {mapStateToProps} from \"../../redux/actions/mapStateProps\";\nimport {mapDispatchProps} from \"../../redux/actions/mapDispatchProps\";\n\nimport {LargeButton} from \"../parts/button\";\nimport {sendFromPS} from \"../../connection/PScommunicate\";\nimport {getPhotoshopImages} from \"../../fileSystem/getPhotoshopImg\";\nimport JsxButton from \"./JsxButton\";\nimport SwitchModeButton from \"./switchMode\";\nconst FooterMainButton = (prop) =>{\n    const sendToIllustrator = async() =>{\n        const images = await getPhotoshopImages();\n        if(!Array.isArray(images)){\n            alert(\"nothing\");\n            return false;\n        }\n        const send = sendFromPS();\n        send.sendMsg(images);\n    }\n    \n    return(\n        <footer className=\"footer mainButtonForm\">\n            <ul>\n                <li>\n                    <LargeButton name=\"send to Illustrator\" func={sendToIllustrator}/>\n                </li>\n                <li>\n                    <JsxButton />\n                </li>\n                <li>\n                    <SwitchModeButton />\n                </li>\n            </ul>\n        </footer>\n    )\n}\n\nexport default connect(mapStateToProps,mapDispatchProps)(FooterMainButton);","import * as React from \"react\";\nimport {useMemo,useState} from \"react\";\nimport {connect} from \"react-redux\";\nimport {mapStateToProps} from \"../../../redux/actions/mapStateProps\";\nimport {mapDispatchProps} from \"../../../redux/actions/mapDispatchProps\";\n\nimport {InitPS} from \"../../../redux/reducer/type\";\nimport JsxButton from \"../JsxButton\";\nimport SwitchModeButton from \"../switchMode\";\n\nconst CompactMode = (prop:{state:{PSReducer:InitPS}}) =>{\n    const [state,setState]:[InitPS,(v:InitPS)=>void] = useState(prop.state.PSReducer);\n    useMemo(()=> setState(prop.state.PSReducer),[prop.state.PSReducer]);\n    const isImport = state.moreOptions.export;\n    const extList = [];\n    Object.entries(isImport ? state.moreOptionsExt : state.extensions).forEach(([key,value])=>{\n        extList.push(<li key={key} className={ value ? \"checkedOn\" : \"checkedOff\"}>{key}</li>);\n    });\n    const options = [];\n    Object.entries(state.options).forEach(([key,value])=>{\n        options.push(<li key={key} className={ value ? \"checkedOn\" : \"checkedOff\"}>{key}{typeof value === \"number\" ? \" :\"+ value : \"\"}</li>);\n    });\n    const moreOptions = [];\n    Object.entries(state.moreOptions).forEach(([key,value])=>{\n        moreOptions.push(<li key={key} className={ value ? \"checkedOn\" : \"checkedOff\"}>{key}</li>)\n    })\n    return(\n        <div className=\"compactMode\">\n            <h3 className=\"head-small\">extensions</h3>\n            <ul className=\"compactMode__list\">{extList}</ul>\n            <h3 className=\"head-small\">options</h3>\n            <ul className=\"compactMode__list\">{options}</ul>\n            <ul className=\"compactMode__list\">{moreOptions}</ul>\n            <ul className=\"compactMode__buttons\">\n                <li>\n                    <JsxButton />\n                </li>\n                <li>\n                    <SwitchModeButton />\n                </li>\n            </ul>\n        </div>\n    )\n}\n\nexport default connect(mapStateToProps,mapDispatchProps)(CompactMode);","import * as fs from \"fs\";\nimport * as path from \"path\";\n\nconst readFile = (path:string):Promise<string|Error> =>{\n    return new Promise((resolve,reject)=>{\n        fs.readFile(path,\"utf-8\",(err,data)=>{\n            if(err)reject(err);\n            resolve(data);\n        });\n    })\n};\n\nconst writeFile = (path:string,data:object):Promise<boolean|Error> =>{\n    return new Promise((resolve,reject)=>{\n        fs.writeFile(path,JSON.stringify(data),(err)=>{\n            if(err)reject(err);\n            resolve(true);\n        })\n    });\n}\n\nexport default {readFile:readFile,writeFile:writeFile}; ","import * as fs from \"fs\";\nimport * as path from \"path\";\nimport bs from \"./basicSystem\";\nimport {extFolder} from \"./init.js\";\n\nconst JSONPath = extFolder + \"/preset.json\";\n\nexport const readJSON = async() =>{\n    const data = await bs.readFile(JSONPath).catch(e=> console.log(e));\n    if(typeof data !== \"string\")return false;\n    const JSONData = JSON.parse(data);\n    console.log(JSONData);\n    return JSONData;\n}\n\n","import * as React from \"react\";\nimport {useState,useEffect} from \"react\";\nimport {connect} from \"react-redux\";\nimport {mapStateToProps} from \"../../../redux/actions/mapStateProps\";\nimport {mapDispatchProps} from \"../../../redux/actions/mapDispatchProps\";\n\nimport {readJSON} from \"../../../fileSystem/presetSystem\";\nimport {InitPS} from \"../../../redux/reducer/type\";\nimport {Extension,Options,MoreOptions} from \"../../../redux/reducer/type\";\nimport SwitchModeButton from \"../switchMode\";\ntype PropType = InitPS & {name:string};\ntype Properties = Extension | Options | MoreOptions;\n\nconst ListElements = (obj:Properties) =>{\n    const array = [];\n    Object.entries(obj).forEach(([key,value])=>{\n        array.push(<li key={key} className={value === true ? \"checkedOn\" : \"checkedOff\"}>{key} {typeof value === \"number\" ? \" :\" + value: \"\"}</li>)\n    });\n    return array;\n}\n\nconst DataProperty = (prop:PropType) =>{\n    const exts = ListElements(prop.extensions);\n    const options = ListElements(prop.options);\n    const moreOptions = ListElements(prop.moreOptions);\n    return(\n        <div className=\"jsonProp\">\n            <h3 className=\"head-small\">{prop.name}</h3>\n            <ul className=\"jsonProp__exts\">\n                {exts}\n            </ul>\n            <ul className=\"jsonProp__options\">\n                {options}\n            </ul>\n            <ul className=\"jsonProp__moreOptions\">\n                {moreOptions}\n            </ul>\n            <p>folder path :{prop.folder}</p>\n        </div>\n    )\n}\n\nconst PresetMode = () =>{\n    const [presets,setPrests]:[PropType[],(d:PropType[])=>void] = useState([]);\n    useEffect(()=>{\n        (async()=>{\n            const json = await readJSON();\n            setPrests(json);\n        })();\n    },[]);\n    const JsonList = presets.map(data=> <li key={data.name}>{DataProperty(data)}</li>)\n    return(\n        <div className=\"presetContainer\">\n            <ul className=\"jsonList\">\n                {JsonList}\n            </ul>\n            <SwitchModeButton />\n        </div>\n    )\n}\n\nexport default connect(mapStateToProps,mapDispatchProps)(PresetMode);","import * as React from \"react\";\nimport {useMemo,useState} from \"react\";\nimport {connect} from \"react-redux\";\nimport {mapStateToProps} from \"../../redux/actions/mapStateProps\";\nimport {mapDispatchProps} from \"../../redux/actions/mapDispatchProps\";\n\nconst Loading = (props) =>{\n    const [isLoad,isSetLoad] = useState(false);\n    useMemo(()=>isSetLoad(props.state.LoadingState),[props.state.LoadingState]);\n    const loadDisplay = {\n        display: isLoad ? \"block\" : \"none\"\n    }\n    return(\n        <div className=\"loading\" style={loadDisplay}>\n            <h3 className=\"loading__title\" >loading...</h3>\n            <ul className=\"loading__bars\">\n                <li className=\"loading__bars__li\"></li>\n                <li className=\"loading__bars__li\"></li>\n                <li className=\"loading__bars__li\"></li>\n                <li className=\"loading__bars__li\"></li>\n                <li className=\"loading__bars__li\"></li>\n                <li className=\"loading__bars__li\"></li>\n                <li className=\"loading__bars__li\"></li>\n                <li className=\"loading__bars__li\"></li>\n                <li className=\"loading__bars__li\"></li>\n                <li className=\"loading__bars__li\"></li>\n            </ul>\n        </div>\n    )\n}\n\nexport default connect(mapStateToProps,mapDispatchProps)(Loading);","import * as React from \"react\";\n\nexport const PrestSelectForm = ({jsonList,selected,func}:{jsonList:any[],selected:string,func:(e)=>void}) =>{\n    const names = jsonList.map(data => <option key={data.name} value={data.name}>{data.name}</option>);\n    return(\n        <div className=\"selector-wrap\">\n            <select className=\"selector__select\" value={selected} onChange={(e)=>func(e)}>\n                {names}\n            </select>\n        </div>\n    )\n}","import * as React from \"react\";\nimport {useMemo,useState} from \"react\";\nimport {connect} from \"react-redux\";\nimport {mapStateToProps} from \"../../redux/actions/mapStateProps\";\nimport {mapDispatchProps} from \"../../redux/actions/mapDispatchProps\";\nimport { useEffect } from \"react\";\n\nimport {StdButton} from \"../parts/button\";\nimport {StdTextBox} from \"../parts/textBox\";\nimport {PrestSelectForm} from \"../parts/selectBox\";\nimport {readJSON} from \"../../fileSystem/presetSystem\";\nimport bs from \"../../fileSystem/basicSystem\";\nimport {extFolder} from \"../../fileSystem/init.js\";\n\nimport {InitPS} from \"../../redux/reducer/type\";\nconst JSONPath = extFolder + \"/preset.json\";\n\nconst Prests = (prop) =>{\n    const [selectList,setSelectList]:[InitPS[],(array:InitPS[])=>void] = useState([]);\n    const [selected,setSeleted]:[string,(v:string)=>void] = useState(\"\");\n    const [text,setText]:[string,(v:string)=>void] = useState(\"presetName\");\n    useEffect(()=>{\n        (async()=>{\n            const JsonData = await readJSON();\n            setSelectList(JsonData);\n            setSeleted(JsonData[0].name !== undefined ? JsonData[0].name : \"\");\n        })();\n    },[]);\n    const setValue = (e) =>{\n        setSeleted(e.target.value);\n    }\n    const handleTextBox = (e) =>{\n        setText(e.target.value);\n    }\n    const writeJson = async() =>{\n        const json = await readJSON().catch(e=> alert(e));\n        const flag = json.map( d=> d.name).some(name=> name === text);\n        if(flag){\n            alert(\"the name was already registered\");\n            return false;\n        }\n        const data = prop.state.PSReducer;\n        data.name = text;\n        json.push(data);\n        await bs.writeFile(JSONPath,json);\n        setSelectList(json);\n        alert(\"your preset was registered\");\n    }\n\n    const deleteJson = async() =>{\n        const da = await readJSON();\n        const json = da.filter(d=> d.name !== selected);\n        console.log(selected);\n        console.log(json);\n        await bs.writeFile(JSONPath,json);\n        setSelectList(json);\n        alert(\"your preset was deleted\");\n        setSeleted(json[0].name !== undefined ? json[0].name : \"\");\n    }\n\n    const applyJson = async() =>{\n        try{\n            const json = await readJSON();\n            const applyData = json.find(d => d.name === selected);\n            console.log(applyData);\n            if(applyData === undefined)throw Error(\"json data was undefined\");\n            prop.set_Json(applyData);\n        }catch(e){\n            alert(e);\n            return false;\n        }\n    }\n    return(\n        <div className=\"presets\">\n            <h3 className=\"head-small\">presets</h3>\n            <PrestSelectForm jsonList={selectList} selected={selected} func={setValue}/>\n            <StdTextBox name=\"pereset name\" value={text} func={handleTextBox} />\n            <ul className=\"presetsForm\">\n                <li>\n                    <StdButton name=\"apply\" func={applyJson} />\n                </li>\n                <li>\n                    <StdButton name=\"delete\" func={deleteJson}/>\n                </li>\n                <li>\n                    <StdButton name=\"add preset\" func={writeJson}/>\n                </li>\n            </ul>\n        </div>\n    )\n}\n\nexport default connect(mapStateToProps,mapDispatchProps)(Prests);","import * as React from \"react\";\nimport {connect} from \"react-redux\";\nimport {mapStateToProps} from \"../../redux/actions/mapStateProps\";\nimport {mapDispatchProps} from \"../../redux/actions/mapDispatchProps\";\nimport {useMemo,useState} from \"react\";\n\nimport Header from \"./header\";\nimport MainOptions from \"./main\";\nimport AsideOptions from \"./asideOptions\";\nimport FooterMainButton from \"./footer\";\nimport CompactMode from \"./compactMode/compactMain\";\nimport PresetMode from \"./presetMode/presetMode\";\nimport Loading from \"./loading\";\n\nimport Prests from \"./Presets\";\nimport {PSReceive} from \"../../connection/PScommunicate\";\nimport {resizeWindow} from \"../../fileSystem/init.js\";\nconst LayoutPS = (prop):React.ReactElement =>{\n    const [mode,setMode]:[string,(v:string)=>void] = useState(prop.state.PSModeReduce);\n    useMemo(()=>setMode(prop.state.PSModeReduce),[prop.state.PSModeReduce]);\n    let htmlElemnts:React.ReactElement;\n    window.scrollTo(0,0);\n    switch(mode){\n        case \"normal\":\n            htmlElemnts = (\n                <>\n                    <Header />\n                    <MainOptions />\n                    <AsideOptions />\n                    <Prests />\n                    <FooterMainButton />\n                </>\n            );\n            resizeWindow(1000,700);\n        break;\n\n        case \"compact\":\n            htmlElemnts = (\n                <CompactMode />\n            );\n            resizeWindow(450,400);\n        break;\n\n        case \"preset\":\n            htmlElemnts = (\n                <PresetMode />\n            );\n            resizeWindow(700,500);\n        break; \n    }\n    useMemo(()=> {\n        (async()=>{\n            await PSReceive();\n        })();\n    },[])\n    return(\n        <div className=\"container-PS\">\n            <Loading />\n            {htmlElemnts}\n        </div>\n    )\n}\n\nexport default connect(mapStateToProps,mapDispatchProps)(LayoutPS);","import {csInterface,Vulcan,VulcanInt} from \"../fileSystem/init\";\nimport {SendPs,messageHandle} from \"./vulcanConnect\";\n\nconst receive = async(message,set_List) =>{\n    console.log(message);\n    const msg = await messageHandle(message);\n    console.log(msg);\n    if(msg.app !== \"illustrator\")return false;\n    set_List(msg.obj);\n}\n\nexport const AIReceive = async(set_List):Promise<void> =>{\n    const extensionId = csInterface.getExtensionID(); \n    console.log(csInterface);\n    const vulcanNamespace = Vulcan.TYPE_PREFIX + extensionId;//ここで受信したい送信側のExtensionのIDを指定する\n    VulcanInt.addMessageListener(vulcanNamespace,(e)=>receive(e,set_List));\n}\n\nexport const sendFromAI = (app = \"photoshop\") =>{\n    return new SendPs(app);\n}","import * as React from \"react\";\n\nimport {FormType} from \"./type\"; \nexport const StdRadio = ({name,func,arg,value}:FormType<boolean>) =>(\n    <label className=\"stdRadio\">\n        <input type=\"radio\" className=\"stdRadio__input\" checked={value} onChange={(e)=>func(e,arg)} />\n        {name}\n        <div className=\"stdRadio__display\"></div>\n    </label>\n);\n\nexport const ExtRadio = ({name,func,arg,value}:FormType<boolean>) =>(\n    <label className=\"extRadio\">\n        <input type=\"radio\" className=\"extRadio__input\" checked={value} onChange={(e)=>func(e,arg)} />\n        {name}\n        <div className=\"extRadio__display\"></div>\n    </label>\n)","import * as React from \"react\";\nimport {useState,useMemo} from \"react\";\nimport {connect} from \"react-redux\";\nimport {mapStateToProps} from \"../../redux/actions/mapStateProps\";\nimport {mapDispatchProps} from \"../../redux/actions/mapDispatchProps\";\n\nimport {StdRadio} from \"../parts/radio\";\ntype FileList = {\n    path:string,\n    name:string,\n    checked:boolean\n}[];\n\nconst AIMain = (prop) =>{\n    console.log(prop);\n    const handleRadioButton = (e,arg) =>{\n        const list = [...fileList];\n        list.forEach(f => f.checked = false);\n        list[arg.index].checked = true;\n        prop.set_List(list);\n    }\n    const [fileList,setList]:[FileList,(FileList)=>void] = useState(prop.state.AIReplaceReducer);\n    useMemo(()=>setList(prop.state.AIReplaceReducer),[prop]);\n    const list = fileList.map((f,index)=> <li key={f.name}><StdRadio name={f.name} value={f.checked} func={handleRadioButton} arg={{index:index}}/></li>);\n    return(\n        <main className=\"AIMain\">\n            <ul className=\"PSimageList\">\n                {list}\n            </ul>\n        </main>\n    )\n}\n\nexport default connect(mapStateToProps,mapDispatchProps)(AIMain);","import * as React from \"react\";\nimport {connect} from \"react-redux\";\nimport {mapStateToProps} from \"../../redux/actions/mapStateProps\";\nimport {mapDispatchProps} from \"../../redux/actions/mapDispatchProps\";\nimport {useMemo,useState} from \"react\";\nimport {StdButton} from \"../parts/button\";\n\nimport {getPlacedImages} from \"../../fileSystem/getImagesOnAi\";\nimport {shifImages,replaceSelected} from \"../../fileSystem/getImagesOnAi\";\nimport {SendHostScript} from \"../../fileSystem/connectHostJsx\";\nimport {sendFromAI} from \"../../connection/AICommunicate\";\nconst HeaderMainButtons = (prop) =>{\n    const handleGetPlaced = async():Promise<void|boolean> =>{\n        const images = await getPlacedImages();\n        if(!images)return false;\n        prop.get_Placed(images);\n    }\n    /*\n    const handleReplaceImages = async() =>{\n        const AIimg = JSON.parse(JSON.stringify(prop.state.AIReplaceReducer));\n        const replaces = JSON.parse(JSON.stringify(prop.state.AIPlacedImgs));\n        await shifImages(AIimg,replaces);\n        await handleGetPlaced();\n    }\n    */\n    const sendPlacesPhotoshop = async() =>{\n        const send = new SendHostScript(\"getPlacedFullPath.jsx\");\n        let p = await send.callJsx().catch(e=> console.log(e));\n        if(typeof p !== \"string\")return;\n        const placedItems:string[] = JSON.parse(p);\n        console.log(placedItems);\n        if(!Array.isArray(placedItems) || placedItems.length < 1)return false;\n        const connect = sendFromAI();\n        connect.sendMsg(placedItems);\n    }\n\n    const handleReplace = async() =>{\n        const image = prop.state.AIReplaceReducer.find(img=> img.checked);\n        if(image === undefined){\n            alert(\"please check image from photoshop\");\n            return false;\n        }\n        await replaceSelected(image.path);\n    }\n    /*\n        <li>\n            <StdButton name=\"get replaced images\" func={handleGetPlaced}/>\n        </li>\n        <li>\n            <StdButton name=\"replace Images\" func={handleReplaceImages}/>\n        </li>\n    */\n\n    return(\n        <header className=\"AIheader\">\n            <h1 className=\"head-large\">Export images</h1>\n            <ul className=\"AIheader__mainButtons\">\n                <li>\n                    <StdButton name=\"replace selected image\" func={handleReplace}/>\n                </li>\n                <li>\n                    <StdButton name=\"send to Photoshop\" func={sendPlacesPhotoshop}/>\n                </li>\n            </ul>\n        </header>\n    )\n}\n\nexport default connect(mapStateToProps,mapDispatchProps)(HeaderMainButtons);","import * as React from \"react\";\nimport {connect} from \"react-redux\";\nimport {mapStateToProps} from \"../../redux/actions/mapStateProps\";\nimport {mapDispatchProps} from \"../../redux/actions/mapDispatchProps\";\nimport {useMemo,useState} from \"react\";\nimport {AIReceive} from \"../../connection/AICommunicate\";\nimport AIMain from \"./AIMain\";\nimport PlacedList from \"./placedList\";\nimport AsideMenu from \"./asideMenu\";\nimport {reloadEvent,resizeWindow} from \"../../fileSystem/init.js\";\nimport HeaderMainButtons from \"./Header\";\nconst LayoutAI = (prop) =>{\n    console.log(prop);\n    useMemo(()=>{\n        (async()=>{\n            resizeWindow(500,300);\n            reloadEvent();\n            AIReceive(prop.set_List);\n        })();\n    },[]);\n    return(\n        <div className=\"container-AI\">\n            <HeaderMainButtons />\n            {/*<AsideMenu />*/}\n            <AIMain />\n            {/*<PlacedList />*/}\n        </div>\n    )\n}\n\nexport default connect(mapStateToProps,mapDispatchProps)(LayoutAI);","import * as React from \"react\";\nimport {useMemo,useState,useEffect} from \"react\";\nimport LayoutPS from \"./PS/LayoutPS\";\nimport LayoutAI from \"./AI/LayoutAI\";\n\nimport {appID,init} from \"../fileSystem/init\";\nconst Base = ():React.ReactElement =>{\n    const [app,setApp] = useState(\"\");\n    useEffect(()=>init(),[]);\n    useMemo(()=>{\n        console.log(appID);\n        setApp(appID);\n    },[appID]);\n    let mainContent:unknown;\n    if(app===\"ILST\")mainContent = <LayoutAI />;\n    if(app==\"PHXS\")mainContent = <LayoutPS />;\n    return(\n        <>\n            {mainContent}\n        </>\n    )\n}\n\nexport default Base","import * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport {Provider} from \"react-redux\";\nimport { configStore } from \"./redux/store/store\";\n\nimport Base from \"./components/Base\";\nimport \"../styles/style.scss\";\n\nconst store = configStore();\nReactDOM.render(\n    <Provider store={store}>\n        <Base />\n    </Provider>,\n    document.getElementById(\"root\")\n);"],"sourceRoot":""}